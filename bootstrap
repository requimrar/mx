#!/bin/bash

# don't run this out of directory.
# please.


# don't change this, the rest of the OS build depends on this.
# if you like, you can move it and symlink it.
PREFIX=`pwd`/build/toolchain

# please don't change this
export SYSROOT=`pwd`/build/sysroot
THREADS=4

# setup colour codes
_BOLD=`tput bold`
_NORMAL=`tput sgr0`
_BLUE=`tput setaf 4`
_GREEN=`tput setaf 2`




mkdir build

echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Setting up sysroot${_NORMAL}"
mkdir -p $SYSROOT/usr/include/
mkdir -p $SYSROOT/usr/lib

cp -r Libraries/libc/include/* $SYSROOT/usr/include/
cp -r Libraries/libsyscall/syscall.h $SYSROOT/usr/include/sys/
cp -r Libraries/libm/include/* $SYSROOT/usr/include/

cd build

# first, download our patched gcc and binutils.
echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Downloading binutils and gcc for target x86_64-orionx${_NORMAL}"
if [ ! -d binutils ]; then
	git clone https://requimrar@bitbucket.org/requimrar/binutils.git
fi

if [ ! -d gcc ]; then
	git clone https://requimrar@bitbucket.org/requimrar/gcc.git
fi

echo "${_BOLD}${_GREEN}=> ${_NORMAL}${_BOLD}Sysroot: $SYSROOT${_NORMAL}"
echo "${_BOLD}${_GREEN}=> ${_NORMAL}${_BOLD}Prefix:  $PREFIX${_NORMAL}"
echo ""

# start building.
mkdir build-bin build-gcc
cd build-bin
echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Configuring binutils${_NORMAL}"
../binutils/configure --target=x86_64-orionx --prefix=$PREFIX --with-sysroot=$SYSROOT --disable-werror --disable-nls > /dev/null

echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Building binutils${_NORMAL}"
make -j$THREADS all > /dev/null

echo "${_BOLD}${_GREEN}=> ${_NORMAL}${_BOLD}Installing binutils${_NORMAL}"
make -j$THREADS install > /dev/null


echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Configuring gcc${_NORMAL}"
cd ../build-gcc
export PATH="$PREFIX/bin:$PATH"
../gcc/configure --target=x86_64-orionx --prefix=$PREFIX --with-sysroot=$SYSROOT \
	--disable-werror --disable-nls --enable-languages=c,c++ > /dev/null

echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Building gcc${_NORMAL}"
make -j$THREADS all-gcc > /dev/null

echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Building libgcc${_NORMAL}"
make -j$THREADS all-target-libgcc > /dev/null

echo "${_BOLD}${_GREEN}=> ${_NORMAL}${_BOLD}Installing gcc and libgcc${_NORMAL}"
make -j$THREADS install-gcc > /dev/null
make -j$THREADS install-target-libgcc > /dev/null


# we need to build our libc with the cross compiler.
export CC=`pwd`/../toolchain/bin/x86_64-orionx-gcc
export CXX=`pwd`/../toolchain/bin/x86_64-orionx-g++
export LD=`pwd`/../toolchain/bin/x86_64-orionx-gcc
export CPP=`pwd`/../toolchain/bin/x86_64-orionx-cpp
export AR=`pwd`/../toolchain/bin/x86_64-orionx-ar
export AS=`pwd`/../toolchain/bin/x86_64-orionx-as

echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Building [mx] libc${_NORMAL}"
make -C ../../Libraries/libc
make -C ../../Libraries/libsyscall

# unset those.
unset CC
unset CXX
unset LD
unset CPP
unset AR
unset AS


echo "${_BOLD}${_BLUE}=> ${_NORMAL}${_BOLD}Building libstdc++${_NORMAL}"
make -j$THREADS all-target-libstdc++-v3

echo "${_BOLD}${_GREEN}=> ${_NORMAL}${_BOLD}Installing libstdc++${_NORMAL}"
make -j$THREADS install-target-libstdc++-v3

cd ..
cd ..

rm -rf build/build-bin
rm -rf build/build-gcc

# todo: change this when (if) we upgrade gcc
cp $PREFIX/lib/gcc/x86_64-orionx/4.9.1/include/*.h $SYSROOT/usr/include/



cd tools
./build-compression.sh
cd ..


if [ -f build/disk.img ]; then
	exit
fi

tools/createdisk.sh










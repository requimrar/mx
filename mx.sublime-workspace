{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"x86_64-",
				"x86_64-orionx-as"
			],
			[
				"Meta",
				"MetadataAddr	uint64_t"
			],
			[
				"GetStra",
				"GetStorageDevice()	Kernel::HardwareAbstraction::Devices::Storage::StorageDevice *"
			],
			[
				"c",
				"completed	bool"
			],
			[
				"IO",
				"IOTransfer	struct"
			],
			[
				"FT_LOAD_FACE",
				"FT_Open_Face(FT_Library library, const FT_Open_Args *args, FT_Long face_index, FT_Face *aface)	FT_Error"
			],
			[
				"jmp",
				"__jmp_buf_regs	struct"
			],
			[
				"Bitm",
				"BitmapImage	class"
			],
			[
				"Bi",
				"BitmapImage	class"
			],
			[
				"mn",
				"tm_mon	int"
			],
			[
				"tm_day",
				"tm_mday	int"
			],
			[
				"tmy",
				"tm_year	int"
			],
			[
				"O",
				"O_RDWR	macro"
			],
			[
				"Open",
				"OpenAny(const char *path, uint64_t flags)	uint64_t"
			],
			[
				"S",
				"StandardIO	namespace"
			],
			[
				"Prinnt",
				"PrintFormatted(const char *string, ...)	void"
			],
			[
				"getcur",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"mult",
				"Multitasking::	namespace"
			],
			[
				"curr",
				"CurrentThread	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Multi",
				"Multitasking::	namespace"
			],
			[
				"Ge",
				"GetCurrentProcess()	Kernel::HardwareAbstraction::Multitasking::Process *"
			],
			[
				"MUlti",
				"Multitasking::	namespace"
			],
			[
				"STATE_",
				"STATE_SUSPEND	macro"
			],
			[
				"Sta",
				"State	uint8_t"
			],
			[
				"GeTThrea",
				"GetThreadList(Kernel::HardwareAbstraction::Multitasking::Thread *t)	Library::LinkedList<Thread> *"
			],
			[
				"GetThrea",
				"GetThreadList(Kernel::HardwareAbstraction::Multitasking::Thread *t)	Library::LinkedList<Thread> *"
			],
			[
				"Comm",
				"CommandList	Library::LinkedList<Command> *"
			],
			[
				"LOG",
				"Log(const char *str, ...)	void"
			],
			[
				"Page",
				"PageTableIndex	uint64_t"
			],
			[
				"GetCUr",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"__s",
				"__sighandle_other()	void"
			],
			[
				"Curr",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"All",
				"AllocatePage()	uint64_t"
			],
			[
				"GetCur",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"SendSimple",
				"SendSimpleMessageToProcess(uint64_t TargetPID, Library::SystemCall::MessageTypes Type, uint64_t D1, uint64_t D2, uint64_t D3, void (*Callback)())	void"
			],
			[
				"sign",
				"sighandler_t	typedef"
			],
			[
				"Ins",
				"InstallSignalHandler(uint64_t signum, sighandler_t handler)	void"
			],
			[
				"sig",
				"sig_atomic_t	typedef"
			],
			[
				"Su",
				"SuspProc	macro"
			],
			[
				"GetCu",
				"GetCurrentProcess()	Kernel::HardwareAbstraction::Multitasking::Process *"
			],
			[
				"Suspend",
				"Suspend(const char *p)	void"
			],
			[
				"GEt",
				"GetCurrentProcess()	Kernel::HardwareAbstraction::Multitasking::Process *"
			],
			[
				"Kill",
				"Kill(Kernel::HardwareAbstraction::Multitasking::Process *p)	void"
			],
			[
				"GetC",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Mutl",
				"Multitasking::	namespace"
			],
			[
				"WakeForMes",
				"WakeForMessage(Kernel::HardwareAbstraction::Multitasking::Thread *Thread)	void"
			],
			[
				"GetTh",
				"GetThread(uint64_t id)	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Mess",
				"MessageClassTypes	enum"
			],
			[
				"Kern",
				"KernelNIC	HardwareAbstraction::Devices::NIC::GenericNIC *"
			],
			[
				"Get",
				"GetMapping(uint64_t VirtAddr, Kernel::HardwareAbstraction::MemoryManager::Virtual::PageMapStructure *VAS)	uint64_t"
			],
			[
				"Allocate",
				"AllocateVirtual()	uint64_t"
			],
			[
				"Hea",
				"KernelHeap::	namespace"
			],
			[
				"ALL",
				"AllocateTLS()	void *"
			],
			[
				"fil",
				"_FileSize	uint64_t"
			],
			[
				"FSOb",
				"FSObjectTypes	enum"
			],
			[
				"F",
				"Folder	Kernel::HardwareAbstraction::Filesystems::VFS::FSObjectTypes"
			],
			[
				"Oep",
				"OpenFile(const char *path, uint8_t mode)	uint64_t"
			],
			[
				"MMap",
				"_MMap_Anonymous(uint64_t addr, uint64_t size, uint64_t prot, uint64_t flags)	uint64_t"
			],
			[
				"A",
				"AllocateVirtual()	uint64_t"
			],
			[
				"fputs",
				"_fputsn(outfunc_t out, const char *s, int c)	void"
			],
			[
				"Up",
				"uppercase"
			],
			[
				"fputc",
				"fputc(int c, FILE *str)	int"
			],
			[
				"_std",
				"_stdin	FILE"
			],
			[
				"read",
				"read(int fd, void *buf, size_t count)	ssize_t"
			],
			[
				"ispar",
				"IsParsingWidth	bool"
			],
			[
				"bui",
				"build-gcc"
			],
			[
				"Mul",
				"Multitasking::	namespace"
			],
			[
				"Setup",
				"SetupStackThread_Proc(Kernel::HardwareAbstraction::Multitasking::Thread *thread, uint64_t u, uint64_t f, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6)	void"
			],
			[
				"Setupstack",
				"SetupStackThread_Kern(Kernel::HardwareAbstraction::Multitasking::Thread *thread, uint64_t u, uint64_t f, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6)	void"
			],
			[
				"x86",
				"x86_64-orionx-elf-as"
			],
			[
				"Print",
				"PrintString(const char *str)	void"
			],
			[
				"IsPa",
				"IsParsingWidth	bool"
			],
			[
				"arg",
				"ArgSize	int8_t"
			],
			[
				"Memo",
				"MemoryManager::	namespace"
			],
			[
				"Chuk",
				"ChunksInHeap	uint64_t"
			],
			[
				"Chu",
				"ChunksInHeap	uint64_t"
			],
			[
				"Mu",
				"Multitasking::	namespace"
			],
			[
				"Alloca",
				"AllocateChunk(uint64_t x)	void *"
			],
			[
				"Mutex",
				"AutoMutex	class"
			],
			[
				"Grap",
				"Graph2D	class"
			],
			[
				"Square",
				"SquareRoot(double n)	double"
			],
			[
				"Graph",
				"Graph2D	class"
			],
			[
				"pop",
				"pop_front()	void"
			],
			[
				"Remov",
				"RemoveFront()	Library::string *"
			],
			[
				"MUte",
				"Mutexes::	namespace"
			],
			[
				"Ma",
				"MapToAllProcesses(uint64_t v, uint64_t p, uint64_t f)	void"
			],
			[
				"KHea",
				"KernelHeapAddress	macro"
			],
			[
				"KHeap",
				"KernelHeapAddress	macro"
			],
			[
				"KH",
				"KernelHeapMetadata	macro"
			],
			[
				"im",
				"imid	unsigned long long"
			],
			[
				"Ken",
				"Kernel::	namespace"
			],
			[
				"Coa",
				"CoalesceThreshold	macro"
			],
			[
				"Halt",
				"HALT(x)	macro"
			],
			[
				"PageL",
				"FreePageList_type	struct"
			],
			[
				"Remove",
				"RemoveFront()	Kernel::HardwareAbstraction::MemoryManager::Physical::Pair *"
			],
			[
				"Linked",
				"LinkedObjList<class data>	class"
			],
			[
				"File",
				"FileDescriptor	struct"
			],
			[
				"cu",
				"custr	char *"
			],
			[
				"LHeap",
				"KernelHeapMetadata	macro"
			],
			[
				"re",
				"readline()	Library::string *"
			],
			[
				"Size",
				"SizeOfMetadataInPages	uint64_t"
			],
			[
				"String",
				"StringStream	class"
			],
			[
				"Stream",
				"StringStream	class"
			],
			[
				"_M",
				"_MagicHeader	macro"
			],
			[
				"Al",
				"Alignment	macro"
			],
			[
				"addr",
				"Address	void *"
			],
			[
				"Make",
				"MakeHeader(uint64_t addr)	Kernel::HardwareAbstraction::MemoryManager::KernelHeap::Header *"
			],
			[
				"Header",
				"HeaderMagic	macro"
			],
			[
				"Allo",
				"AllocatePage()	uint64_t"
			],
			[
				"KernelHeap",
				"KernelHeapAddress	macro"
			],
			[
				"Footer",
				"FooterMagic	macro"
			],
			[
				"Heap",
				"KernelHeapAddress	macro"
			],
			[
				"Uss",
				"UsedPages	Vector<uint64_t> *"
			],
			[
				"Used",
				"UsedPages	Vector<uint64_t> *"
			],
			[
				"COmpare",
				"CompareLength(const char *a, const char *b, uint64_t length)	bool"
			],
			[
				"Compare",
				"CompareLength(const char *a, const char *b, uint64_t length)	bool"
			],
			[
				"Hash",
				"HashMap<class K, class V>	class"
			],
			[
				"in",
				"internal64	_Internal::SectionHeader64 *"
			],
			[
				"get",
				"GetSectionHeader(uint64_t index)	ElfLibrary::SectionHeader *"
			],
			[
				"Sec",
				"SectionHeader	class"
			],
			[
				"file",
				"file	ElfLibrary::ElfFile *"
			],
			[
				"Program",
				"ProgramType	enum"
			],
			[
				"size",
				"SizeInFile()	uint64_t"
			],
			[
				"progra",
				"ProgramHeaderEntrySize	uint16_t"
			],
			[
				"pro",
				"ProgramHeaderOffset	uint32_t"
			],
			[
				"bit",
				"Bitsize	enum"
			],
			[
				"sec",
				"SectionHeaderEntries	uint16_t"
			],
			[
				"progr",
				"ProgramHeaderEntries	uint16_t"
			]
		]
	},
	"buffers":
	[
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 24,
				"line_ending": "Unix"
			}
		},
		{
			"file": "makefile",
			"settings":
			{
				"buffer_size": 3684,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Libraries/BitmapLibrary/makefile",
			"settings":
			{
				"buffer_size": 641,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bootstrap",
			"settings":
			{
				"buffer_size": 3154,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/makefile.sublime-build",
	"command_palette":
	{
		"height": 287.0,
		"selected_items":
		[
			[
				"ch",
				"Snippet: Copyright Header"
			],
			[
				"clean",
				"Build: Make clean"
			],
			[
				"c",
				"Snippet: Copyright Header"
			],
			[
				"clena",
				"Build: Make clean"
			],
			[
				"hea",
				"Snippet: Copyright Header"
			],
			[
				"header",
				"Snippet: Copyright Header"
			],
			[
				"lean",
				"Build: Make clean"
			],
			[
				"claena",
				"SublimeClang: Clear cache"
			],
			[
				"clea",
				"Build: Make clean"
			],
			[
				"eah",
				"Set Syntax: HTML (ASP)"
			],
			[
				"head",
				"Snippet: Copyright Header"
			],
			[
				"h",
				"Snippet: Copyright Header"
			],
			[
				"haeder",
				"Snippet: Copyright Header"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"cleam",
				"Package Control: Remove Package"
			],
			[
				"clen",
				"Build: Make clean"
			],
			[
				"make ",
				"Build: Make clean"
			],
			[
				"mak",
				"Build: Make clean"
			],
			[
				"make clean",
				"Build: Make clean"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				":make",
				"Set Syntax: Makefile"
			],
			[
				"package remo",
				"Package Control: Remove Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pacage remo",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"m",
				"Markdown Preview: preview in Browser"
			],
			[
				"p",
				"Package Control: Remove Package"
			],
			[
				"mdp",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"package remove",
				"Package Control: Remove Package"
			],
			[
				"package list",
				"Package Control: List Packages"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"term",
				"Open in terminal"
			],
			[
				"sub",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"sni",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"ani",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"sn",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"snipp",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"snippet",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"Snipp",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Package Control: Remove Package"
			],
			[
				"p r",
				"Package Control: Remove Package"
			],
			[
				"package i",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Preferences: Browse Packages"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"package control instal",
				"Package Control: Install Package"
			],
			[
				"package instal",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"exit()",
			"help();",
			"help()",
			"help"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/grub",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/BitmapLibrary",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc"
	],
	"file_history":
	[
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libm/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libsyscall/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/bootstrap",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/grub/menu.lst",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/grub/bootx64.efi",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/bootstrap",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/MemoryManager/Virtual.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Devices/NIC/RTL8139.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Multitasking/Scheduler.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Multitasking/TaskSwitcher.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HeaderFiles/HardwareAbstraction/Devices/NIC.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Multitasking/Task.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HeaderFiles/HardwareAbstraction/Devices/StorageDevice.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Devices/StorageDevices/ATA/ATA.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Devices/StorageDevices/ATA/DMA.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Filesystems/FAT/FAT32.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Filesystems/VFS/Filesystem.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Multitasking/IOScheduler.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Filesystems/GPT.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Filesystems/MBR.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HeaderFiles/HardwareAbstraction/IOScheduler.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HeaderFiles/Kernel.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HeaderFiles/HardwareAbstraction/Multitasking.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HeaderFiles/Multiboot.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Multitasking/SchedulingHelpers.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/Devices/StorageDevices/StorageDevice.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/Iris/String.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/platform/jmp/longjmp.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/platform/jmp/setjmp.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/userspace/Programs/HelloSpamTest/HelloSpamTest.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/userspace/Programs/HelloSpamTest/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/setjmp.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/sysroot/usr/include/freetype2/ftsystem.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memmove.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/BitmapLibrary/BitmapLibrary.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/sysroot/usr/include/freetype2/config/ftconfig.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/assert.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Orion-X4.sublime-project",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/build-freetype/ftconfig.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/freetype-2.5.3/devel/ftoption.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/userspace/Programs/VTConsole/VTConsole.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/GraphPlot/GraphPlot.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/GraphPlot/GraphPlot.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/BitmapLibrary/BitmapLibrary.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/freetype-2.5.3/include/config/ftconfig.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/freetype-2.5.3/include/freetype.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/freetype-2.5.3/include/config/ftheader.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/freetype-2.5.3/include/ft2build.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/IPC/IPC.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/sysroot/usr/include/freetype2/ft2build.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/sysroot/usr/include/freetype2/freetype.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/freetype-2.5.3/include/config/ftoption.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/sortix/carray/carray.c++",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/support.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/stdlib.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/strtof.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/sysroot/usr/include/c++/bits/stl_algobase.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/errno.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/errno.c",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/todo_stdio.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/stddef.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/perror.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fopen.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/stdio.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/todo_stdlib.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/time.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/unistd/lseek.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/RdeSTL/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/unistd.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/string.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/defs/_file.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/defs/_func.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/wchar.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/wchar/mblen.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/wchar/mbstowcs.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/atexit.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/exit.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/setjmp.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/todo.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fgetc.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/remove.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fputc.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fputs.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/puts.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/sortix/libc/include/stdio.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fclose.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/unistd/open.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/unistd/close.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/sys/mmap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/sys/mman.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strtok.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strstr.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strspn.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strrchr.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strpbrk.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncpy.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncmp.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncat.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strlen.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcspn.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcpy.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcmp.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strchr.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcat.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memset.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/rand.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/div.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/abs.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/fcntl.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fwrite.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fopen",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/IPC/StreamingIPC.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdio/fread.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/unistd/read.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/unistd/write.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/Kernel.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/include/signal.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/HardwareAbstraction/SystemCall/Syscall.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/IPC/sighandler.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/userspace/Programs/CarbonShell/BuiltinCommands.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/userspace/Programs/CarbonShell/CarbonShell.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/source/Kernel/IPC/sigreturn.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/Iris/HeaderFiles/List.hpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/abs.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/atoi.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/div.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/qsort.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/qsort_r.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/rand.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/strtof.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/strtol.cpp",
			"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memccpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memcmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memcpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memmove.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memrchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memset.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcat.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcspn.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strlen.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncat.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strpbrk.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strrchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strspn.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strstr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strtok.cpp",
			"",
			"*.cpp,*.hpp,*.s",
			"",
			"Internal::GetLFBAddr()",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"backup",
			"oex",
			"output",
			"cross64",
			"cr3",
			"SwitchPML4T",
			"MAC",
			"tx",
			"initialise",
			"virtual",
			"initialise",
			"expanding",
			"goto repeat",
			"GetFSObjects",
			"ScheduleRead",
			"Read(",
			"Read",
			"ATA->Read",
			"block",
			"sigsetjmp",
			"setsigjmp",
			"setjmp",
			"SIG_SETMASK",
			"FT_EXPORT_DEF",
			"FT_Init_Freetype",
			"extern \"C\"",
			"FT_Init_FreeType",
			"EDOM",
			"TODO",
			"lseek",
			"exit",
			"__tm",
			"putchar",
			"#ifndef __cplusplus",
			"C0DE",
			"PendingSleepList",
			"InstructionPointer",
			"0x25",
			"25",
			"250",
			"SendSimpleMessage",
			"WakeForMessage",
			"length",
			"fetchandremove",
			"%x, %d",
			"%x, %x",
			"invalid target thread",
			"wakeformess",
			"0x05",
			"x07",
			"0x3",
			"0x7",
			"sighandle_t",
			"wakeformessage",
			"extern \"C++\"",
			"output",
			"CCFLAGS",
			"0x38",
			"Syscall_MMapFile",
			"ENOTSUP",
			"writefile",
			"WriteFile",
			"SKT",
			"llx",
			"->size",
			"printf",
			" | zhiayang@outlook.com",
			"puts",
			"user",
			"noop",
			"SIZE_MAX",
			"__SIZE_MAX__",
			" )",
			" ( ",
			"restrict",
			"uintmax_t",
			"abs",
			"isparsingpre",
			"isparsingwidth",
			"c++/",
			"x86_64-orionx-elf",
			"kill",
			"printf",
			"_callback",
			"vprintf",
			"printf",
			"-E",
			"unset",
			"__cplusplus",
			"extern \"C\"",
			"IPC.hpp",
			"hypot",
			"remquo",
			"abs",
			"\\tlong double ",
			"\\tfloat ",
			"\\tdouble ",
			"hypo",
			"(int)",
			"int",
			"\\tlong double ",
			"\\tfloat ",
			"\\tdouble ",
			"fabs",
			"signbit",
			"sign",
			"\\tdouble ",
			"\\tfloat",
			"\\tlong double ",
			"long double ",
			"Minimum",
			"Math::",
			"stdint.h",
			"License 2.0",
			"Creative Commons Attribution-ShareAlike 3.0 Unported",
			" | zhiayang@outlook.com",
			"zhiayang@outlook.com",
			"Licensed under the Apache License 2.0",
			"Copyright (c) 2014 - The Foreseeable Future, zhiayang@gmail.com | zhiayang@outlook.com",
			"printf",
			"SIZE_MAX",
			"intmax_t",
			"uintmax_t",
			"abs",
			"restrict",
			" )",
			" ( ",
			" )"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"mxa",
			"build",
			"MapFlags",
			"sighandler_t",
			"lx",
			"",
			"LONG_MAX",
			")",
			"(",
			"uint64_t",
			"x86_64-orionx",
			"\\tlong double\\t",
			"\\tfloat\\t\\t",
			"\\tdouble\\t\\t",
			"(long)",
			"\\tlong double\\t",
			"\\tfloat\\t\\t",
			"\\tdouble\\t\\t",
			"\\tfloat\\t\\t",
			"\\tlong double\\t",
			"long double\\t",
			"minimum",
			"math::",
			"License Version 2.0",
			"the Apache License 2.0",
			"",
			"Licensed under the GNU LGPL",
			"Copyright (c) 2011 - 2014, Jonas 'Sortie' Termansen",
			"LONG_MAX",
			"int64_t",
			"uint64_t",
			"__restrict",
			")",
			"(",
			")",
			"(",
			"#include \"../../include/string.h\"",
			"#include \"../../include/stdint.h\"",
			"#include \"../../include/stddef.h\"",
			"long",
			"LONG_MIN",
			"LONG_MAX",
			"unsigned long",
			"long",
			"isspace",
			"",
			"char",
			"strtol",
			"__restrict",
			")",
			"(",
			")",
			"(",
			"",
			"char",
			"float",
			")",
			"(",
			"__restrict__",
			"x86_64-orionx-elf-",
			"the Apache License 2.0",
			"Apache License 2.0",
			"PageSize",
			"HeapAssert",
			"uint64_t",
			"_MagicFooter",
			"_MagicHeader",
			"int64_t",
			"uint64_t",
			"int32_t",
			"uint32_t",
			"uint16_t",
			"uint64_t",
			"const uint64_t",
			"FSObjectTypes::Folder",
			"* FSObject::",
			"* FSObject",
			"",
			"ATADrive",
			"Unmap",
			"PageMapStructure",
			"Process",
			"Thread",
			"uint64_t",
			"nullptr",
			"if(proc && proc->AllocatedPages)",
			"Process",
			"Thread",
			"double",
			") \\1",
			"\\1",
			"int32_t",
			"int16_t",
			"int8_t",
			"uint32_t",
			"uint16_t",
			"uint8_t",
			"",
			"/* \\1 */",
			"// \\1",
			"\\1",
			"\\0",
			"\\1",
			"VT_CursorX * 8 + 10",
			"VT_CursorX * 8 + 3",
			"do(",
			"if(",
			")\\n{",
			"if(",
			"while(",
			"for(",
			")\\n{",
			"long double",
			"fldl %\\1",
			"fldl %\\0",
			")\\n{",
			"false",
			"LinkedList",
			"maxTemp = 10000",
			"const uint32_t",
			"const uint32_t ",
			"foreseeable",
			"(c) 2013 - The Forseeable Future",
			"DefaultHeapMetadata",
			"DefaultMetadataAddress",
			"UnMapAddress",
			"MapAddress",
			"BOpt_Unlikely"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24,
						"regions":
						{
						},
						"selection":
						[
							[
								24,
								24
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3684,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Libraries/BitmapLibrary/makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 641,
						"regions":
						{
						},
						"selection":
						[
							[
								251,
								251
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "bootstrap",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3154,
						"regions":
						{
						},
						"selection":
						[
							[
								1876,
								1876
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1180.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 47.0
	},
	"output.exec":
	{
		"height": 63.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"project": "mx.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"multi",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Multitasking.hpp"
			],
			[
				"storage",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Devices/StorageDevice.hpp"
			],
			[
				"khea",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"kheap",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"heap",
				"Libraries/Iris/HeaderFiles/Heap.hpp"
			],
			[
				"pci.cpp",
				"source/Kernel/HardwareAbstraction/Devices/PCI/PCI.cpp"
			],
			[
				"task",
				"source/Kernel/HardwareAbstraction/Multitasking/Task.cpp"
			],
			[
				"loadelf",
				"source/Kernel/HardwareAbstraction/LoadBinary/LoadELF.cpp"
			],
			[
				"fat32",
				"source/Kernel/HardwareAbstraction/Filesystems/FAT/FAT32.cpp"
			],
			[
				"filedesc",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/FileDescriptors.cpp"
			],
			[
				"filesyste",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"ipcstrea",
				"source/Kernel/IPC/StreamingIPC.cpp"
			],
			[
				"socke",
				"source/Kernel/HardwareAbstraction/Network/Socket.cpp"
			],
			[
				"folder",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/Folder.cpp"
			],
			[
				"file.cpp",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/File.cpp"
			],
			[
				"string",
				"Libraries/Iris/String.cpp"
			],
			[
				"socket",
				"source/Kernel/HardwareAbstraction/Network/Socket.cpp"
			],
			[
				"ker",
				"source/Kernel/Kernel.cpp"
			],
			[
				"virtual",
				"source/Kernel/HardwareAbstraction/MemoryManager/Virtual.cpp"
			],
			[
				"udp",
				"source/Kernel/HardwareAbstraction/Network/UDP.cpp"
			],
			[
				"time",
				"source/Kernel/Utility/Time.cpp"
			],
			[
				"filesys",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"filesystem",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"syscall",
				"source/Kernel/HardwareAbstraction/SystemCall/Syscall.s"
			],
			[
				"sys",
				"source/Kernel/HardwareAbstraction/SystemCall/Syscall.s"
			],
			[
				"process",
				"source/Kernel/HardwareAbstraction/SystemCall/Process.cpp"
			],
			[
				"filee",
				"source/Kernel/HeaderFiles/Filesystems.hpp"
			],
			[
				"test.c",
				"src/kernel/test.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Desktop/Stuff/OSDev/Orion-X4/testbed/testbed.sublime-project"
			],
			[
				"web",
				"~/Dropbox/Public/ProjectsDay/webreport.sublime-project"
			],
			[
				"wb",
				"~/Dropbox/Public/ProjectsDay/webreport.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 225.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}

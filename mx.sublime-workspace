{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"BUFS",
				"BUFSIZ	macro"
			],
			[
				"BUFSI",
				"BUFFER_SIZE	macro"
			],
			[
				"__BUFMODE_",
				"__BUFMODE_BLOCK	macro"
			],
			[
				"buff",
				"bufferoffset	uint64_t"
			],
			[
				"buf",
				"bufferoffset	uint64_t"
			],
			[
				"read",
				"read(int fd, void *buf, size_t count)	ssize_t"
			],
			[
				"buffe",
				"buffersize	uint64_t"
			],
			[
				"_IO",
				"_IONBF	macro"
			],
			[
				"__str",
				"__streambuf_create(size_t size)	struct streambuf *"
			],
			[
				"__steam",
				"__streambuf_create(size_t size)	struct streambuf *"
			],
			[
				"bu",
				"buffer	void *"
			],
			[
				"str",
				"streambuf	struct"
			],
			[
				"Create",
				"CreateMutex(pthread_mutex_t *mtx, const pthread_mutexattr_t *attr)	void"
			],
			[
				"Gte",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Set",
				"SetThreadErrno(int errno)	void"
			],
			[
				"PTHR",
				"PTHREAD_MUTEX_ERRORCHECK	macro"
			],
			[
				"PTH",
				"PTHREAD_MUTEX_NORMAL	macro"
			],
			[
				"erase",
				"erase(const key_type &key)	size_type"
			],
			[
				"mtx",
				"mtxmap	rde::hash_map<pthread_mutex_t, Mutex *> *"
			],
			[
				"pth",
				"pthread_mutex_t	typedef"
			],
			[
				"Mu",
				"Mutex	class"
			],
			[
				"pthr",
				"pthread_mutex_t	typedef"
			],
			[
				"pt",
				"pthread_mutex_t	typedef"
			],
			[
				"cur",
				"CurrentThread	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Auto",
				"AutoSemaphore	class"
			],
			[
				"pop",
				"pop_front()	Thread *"
			],
			[
				"M",
				"Multitasking	namespace"
			],
			[
				"pus",
				"push_back(const ALPPair &v)	void"
			],
			[
				"sr",
				"str1	const char*"
			],
			[
				"Is",
				"IsParsingWidth	bool"
			],
			[
				"wa",
				"watching	Library::LinkedList<Thread> *"
			],
			[
				"remove",
				"RemoveFront()	Thread *"
			],
			[
				"Thr",
				"Thread	struct"
			],
			[
				"wat",
				"watching	Library::LinkedList<Thread> *"
			],
			[
				"sta",
				"State	uint8_t"
			],
			[
				"stac",
				"StackSize	uint64_t"
			],
			[
				"Sta",
				"StackPointer	uint64_t"
			],
			[
				"FreeVirtual",
				"FreeVirtual(uint64_t addr)	void"
			],
			[
				"hash",
				"hash_map<typename TKey, typename TValue>()	constructor"
			],
			[
				"FLAG_",
				"FLAG_DETACHED	macro"
			],
			[
				"BLO",
				"Block()	void"
			],
			[
				"WakeForMessage",
				"WakeForMessage(Kernel::HardwareAbstraction::Multitasking::Thread *thread)	void"
			],
			[
				"watch",
				"watching	rde::list<Thread *> *"
			],
			[
				"w",
				"watchers	rde::list<Thread *> *"
			],
			[
				"TH",
				"Thread	struct"
			],
			[
				"GetCurrent",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Threa",
				"Thread	struct"
			],
			[
				"pthrea",
				"pthread_t	typedef"
			],
			[
				"S",
				"StandardIO"
			],
			[
				"Process",
				"ProcessList	rde::list<Process *> *"
			],
			[
				"Thread",
				"ThreadList_LowPrio	rde::list<Thread *> *"
			],
			[
				"Th",
				"Thread	struct"
			],
			[
				"thr",
				"thrlist	rde::list<Thread*>* thrlist = GetThreadList(thread);"
			],
			[
				"Get",
				"GetTID()	pthread_t"
			],
			[
				"pthread_",
				"pthread_Join(pthread_t thread, void **retval)	int"
			],
			[
				"GetThread",
				"GetThread(uint64_t tid)	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Exit",
				"ExitThread"
			],
			[
				"stack",
				"stacksize	uint64_t"
			],
			[
				"THrea",
				"Thread_attr	struct"
			],
			[
				"pthread",
				"pthread_attr_t	typedef"
			],
			[
				"NO",
				"_NORMAL"
			],
			[
				"_B",
				"_BOLD"
			],
			[
				"BOLD",
				"_BOLD"
			],
			[
				"CPU",
				"KernelCPUID	CPUID::CPUIDData *"
			],
			[
				"Section",
				"ElfSectionHeaderEntrySize	uint16_t"
			],
			[
				"ElfSection",
				"ElfSectionHeaderEntries	uint16_t"
			],
			[
				"Cir",
				"CircularMemoryBuffer(uint64_t s)	constructor"
			],
			[
				"id",
				"fsid	dev_t"
			],
			[
				"O_CRE",
				"O_CREATE	macro"
			],
			[
				"Circu",
				"CircularMemoryBuffer	class"
			],
			[
				"Signal",
				"SignalProcess(pid_t pid, int signum)	void"
			],
			[
				"Syscall",
				"SyscallTable0"
			],
			[
				"SubP",
				"SubPage2"
			],
			[
				"Do",
				"DoCall"
			],
			[
				"Cru",
				"CurrentCR3	uint64_t"
			],
			[
				"NUm",
				"NumProcesses	uint64_t"
			],
			[
				"Num",
				"NumProcesses	uint64_t"
			],
			[
				"MAXMESS",
				"MaxMessages	macro"
			],
			[
				"Lo",
				"LoadBinary	namespace"
			],
			[
				"Heap",
				"HeapAddr	uint64_t"
			],
			[
				"GetPage",
				"GetPage	macro"
			],
			[
				"Sizeo",
				"SizeOfMetadataInPages	uint64_t"
			],
			[
				"Char",
				"CharWidth	macro"
			],
			[
				"pb",
				"push_back(value_type &&__x)	void"
			],
			[
				"PNG_COLOR_TYPE_",
				"PNG_COLOR_TYPE_RGB_ALPHA	macro"
			],
			[
				"de",
				"depth	auto"
			],
			[
				"png_getihdr",
				"png_get_IHDR(png_const_structrp png_ptr, png_const_inforp info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_method, int *compression_method, int *filter_method)	png_uint_32"
			],
			[
				"fred",
				"fread(void *ptr, size_t size, size_t count, FILE *stream)	size_t"
			],
			[
				"stat",
				"stat(const char *path, struct stat *buf)	int"
			],
			[
				"CXX",
				"CXXOPT"
			],
			[
				"Gt",
				"GetKernelCR3()	uint64_t"
			],
			[
				"Meta",
				"MetadataAddr	uint64_t"
			],
			[
				"Norm",
				"NormStarveThreshold	macro"
			],
			[
				"Sched",
				"ScheduleCount	uint64_t"
			],
			[
				"LowSta",
				"LowStarveThreshold	macro"
			],
			[
				"Low",
				"LowStarvedRemaining	uint64_t"
			],
			[
				"NormSta",
				"NormStarvationLevel	uint64_t"
			],
			[
				"NormStar",
				"NormStarvedRemaining"
			],
			[
				"NormS",
				"NormStarvationLevel	uint64_t"
			],
			[
				"PRoce",
				"ProcessList	LinkedList<Thread>();"
			],
			[
				"Multi",
				"Multitasking	namespace"
			],
			[
				"Syscal",
				"Syscall1Param(uint64_t scvec, uint64_t p1)	uint64_t"
			],
			[
				"Syscaa",
				"Syscall1Param(uint64_t scvec, uint64_t p1)	uint64_t"
			],
			[
				"SEEK_",
				"SEEK_SET	macro"
			],
			[
				"Prr",
				"PrintFormatted(const char *string, ...)	void"
			],
			[
				"Cu",
				"CircularMemoryBuffer(uint64_t s)	constructor"
			],
			[
				"driver",
				"driver_stdout	FSDriver*"
			],
			[
				"driver_Std",
				"driver_stdin	FSDriver*"
			],
			[
				"FSDr",
				"FSDriverType	enum"
			],
			[
				"FSDri",
				"FSDriverType	enum"
			],
			[
				"FSD",
				"FSDriverConsole	class"
			],
			[
				"Mout",
				"Mount(Devices::Storage::Partition *partition, Kernel::HardwareAbstraction::Filesystems::FSDriver *fs, const char *path)	void"
			],
			[
				"Ker",
				"KernelHeap::	namespace"
			],
			[
				"Ali",
				"ALIGNMENT	macro"
			],
			[
				"Allo",
				"AllocateChunk(size_t sz)	void *"
			],
			[
				"heap",
				"HeapEnd	uint64_t"
			],
			[
				"Hea",
				"HeapAddress	uint64_t"
			],
			[
				"FREE",
				"FREE_FOOTER_MAGIC	macro"
			],
			[
				"HEAD",
				"FREE_HEADER_MAGIC	macro"
			],
			[
				"FREE_",
				"FREE_HEADER_MAGIC	macro"
			],
			[
				"Magic",
				"FREE_HEADER_MAGIC	macro"
			],
			[
				"LOW",
				"LowStarvedRemaining	uint64_t"
			],
			[
				"LowS",
				"LowStarvationLevel	uint64_t"
			],
			[
				"LowSt",
				"LowStarvedRemaining	uint64_t"
			],
			[
				"norms",
				"NormStarvedRemaining	uint64_t"
			],
			[
				"Stat",
				"Stat(Kernel::HardwareAbstraction::Filesystems::IOContext *ioctx, Kernel::HardwareAbstraction::Filesystems::VFS::vnode *node, struct stat *st)	void"
			],
			[
				"crt",
				"createtime	uint16_t"
			],
			[
				"c",
				"createdate	uint16_t"
			]
		]
	},
	"buffers":
	[
		{
			"file": "applications/DisplayServer/main.cpp",
			"settings":
			{
				"buffer_size": 1138,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/Kernel/Kernel.cpp",
			"settings":
			{
				"buffer_size": 19322,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Libraries/libc/source/support.cpp",
			"settings":
			{
				"buffer_size": 831,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/Kernel/Console/UserspaceTTY.cpp",
			"settings":
			{
				"buffer_size": 905,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 287.0,
		"selected_items":
		[
			[
				"ch",
				"Snippet: Copyright Header"
			],
			[
				"c",
				"Snippet: Copyright Header"
			],
			[
				"clean",
				"Build: Make clean"
			],
			[
				"clena",
				"Build: Make clean"
			],
			[
				"",
				"About"
			],
			[
				"clea",
				"Build: Make clean"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"hea",
				"Snippet: Copyright Header"
			],
			[
				"header",
				"Snippet: Copyright Header"
			],
			[
				"lean",
				"Build: Make clean"
			],
			[
				"claena",
				"SublimeClang: Clear cache"
			],
			[
				"eah",
				"Set Syntax: HTML (ASP)"
			],
			[
				"head",
				"Snippet: Copyright Header"
			],
			[
				"h",
				"Snippet: Copyright Header"
			],
			[
				"haeder",
				"Snippet: Copyright Header"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"cleam",
				"Package Control: Remove Package"
			],
			[
				"clen",
				"Build: Make clean"
			],
			[
				"make ",
				"Build: Make clean"
			],
			[
				"mak",
				"Build: Make clean"
			],
			[
				"make clean",
				"Build: Make clean"
			],
			[
				":make",
				"Set Syntax: Makefile"
			],
			[
				"package remo",
				"Package Control: Remove Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pacage remo",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"m",
				"Markdown Preview: preview in Browser"
			],
			[
				"p",
				"Package Control: Remove Package"
			],
			[
				"mdp",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"package remove",
				"Package Control: Remove Package"
			],
			[
				"package list",
				"Package Control: List Packages"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"term",
				"Open in terminal"
			],
			[
				"sub",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"sni",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"ani",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"sn",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"snipp",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"snippet",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"Snipp",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Package Control: Remove Package"
			],
			[
				"p r",
				"Package Control: Remove Package"
			],
			[
				"package i",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Preferences: Browse Packages"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"package control instal",
				"Package Control: Install Package"
			],
			[
				"package instal",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"exit()",
			"help();",
			"help()",
			"help"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/DisplayServer",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/defs",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Console",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking"
	],
	"file_history":
	[
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/PCI.cpp",
		"/Users/zhiayang/Desktop/Stuff/Orion Industries/Vx/output/rom.vxs",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/StandardIO.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/ttyServer/main.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/ttyServer/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdio/fread.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdio/fgetc.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Kernel.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/stdio.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/defs/_file.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/CircularMemoryBuffer.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/mx.sublime-project",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdio/_streambuffer.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/defs/_streambuf.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdio/fwrite.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/support.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/unistd/read.cpp",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/black/glass_black.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/blue/glass_blue.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/brown/glass_brown.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/cyan/glass_cyan.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/gray/glass_gray.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/green/glass_green.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/light_blue/glass_light_blue.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/lime/glass_lime.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/magenta/glass_magenta.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/orange/glass_orange.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/pink/glass_pink.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/purple/glass_purple.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/red/glass_red.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/silver/glass_silver.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/white/glass_white.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/yellow/glass_yellow.properties",
		"/Users/zhiayang/Downloads/Invictus_Universal_1.6.x/assets/minecraft/mcpatcher/ctm/blocks/glass/default/transparency/glass_pane.properties",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/defs/_printf.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/Kernel.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libsyscall/source/Functions.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/pthread.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/DisplayServer/main.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SynchroTypes/Mutex.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/pthread/pthread_mutex.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/Syscall.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libsyscall/syscall.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/sys/types.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/Synchro.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/defs/_pthreadstructs.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/LoadBinary/LoadELF.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/IPC/IPC.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/SchedulingHelpers.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libsyscall/source/helper.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/Scheduler.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/Task.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/VFS.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Multitasking.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SynchroTypes/Semaphore.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility/Log.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/DisplayServer/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Console.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Interrupts/Exceptions.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/Global.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Devices/NIC.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/Mutex.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/IO/IOScheduler.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/MemoryManager.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/unistd/misc.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/unistd.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/tools/getpath.sh",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/BitmapLibrary/makefile",
		"/Users/zhiayang/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/defines.mk",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libsyscall/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libm/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/bootstrap",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/strlen.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memset.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memrchr.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memmove.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memcpy.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memcmp.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memchr.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memccpy.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdlib/qsort.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdio/malloc.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/mqueue/mq_open.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdio/vasprintf.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/unistd/open.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/sys/mman.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/string.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/stdlib.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/stddef.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/stdbool.h",
		"/Users/zhiayang/Desktop/test-mx/Libraries/libc/include/stddef.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/tools/mountdisk.sh",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/tools/unmountdisk.sh",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/tools/createdisk",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/MemoryManager/Virtual.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager/Virtual.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/Memory.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/String.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/FSDrivers/FAT32.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/String.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/Partition.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/FSDrivers/MessagingIPC.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/VideoOutput/LinearFramebuffer/LinearFramebuffer.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/Utility.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/VideoOutput/Console80x25.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/Memory.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/Ethernet.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/DNS.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager/Physical.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager/MemoryMap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/Process.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/List.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/Vector.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/Iterator.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/PCI/PCI.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/StringStream.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/LibKernel/KernelPlugs.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/FileIO.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Interrupts/Interrupts.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/StorageDevices/ATA/ATA.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source,-*.cpp.d",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/libraries/iris",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/StringStream.cpp",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/abs.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/atoi.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/div.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/qsort.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/qsort_r.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/rand.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/strtof.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/strtol.cpp",
			"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memccpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memcmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memcpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memmove.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memrchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memset.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcat.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcspn.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strlen.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncat.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strpbrk.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strrchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strspn.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strstr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strtok.cpp",
			"",
			"*.cpp,*.hpp,*.s",
			"",
			"Internal::GetLFBAddr()",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sb->writep",
			"sb->size",
			"this",
			"hash_map",
			"end",
			"rde::hash_map",
			"errno",
			"todo errno",
			"InstructionPointer",
			"signal",
			"Mutexes::",
			"Symbolicate.hpp",
			"Mutexes.hpp",
			"LOCK",
			"useconds_t",
			"dev",
			"update",
			"$(CXX)",
			"stddef",
			"stdarg",
			"errno",
			"strcpy",
			"strcmp",
			"strlen",
			"strcpy",
			"Library::Memory",
			"memmove",
			"memcpy",
			"memset",
			"Colours.hpp",
			"Colours.cpp",
			"Colours::",
			"Comparable",
			"->Size(",
			"->Size",
			"Size",
			"back",
			"Back",
			"RemoveBack",
			"RemoveFront",
			"Front",
			"pop_front",
			"RemoveFront",
			"RemoveBack",
			"InsertFront",
			"InsertBack",
			"->Size(",
			"this->size",
			"->Size(",
			"->Get(",
			"Get",
			"->Get(",
			"->Get",
			"LinkedObjList",
			"getthread(",
			"getthread",
			"getth",
			"kill",
			"UnMap",
			"lfbbuffer",
			"gettrue",
			"UHALT",
			"cli",
			"@",
			"unwatch",
			"errno",
			"_errno",
			"strcmp",
			"strlen",
			"strcpy",
			"Set32",
			"memmove",
			"memset",
			"memcpy",
			"memmove",
			"memset",
			"TopOfStack",
			"TopOfSack",
			"find",
			"AllocateDMA",
			"allocate",
			"Memory.hpp",
			"#include \"Memory.hpp\"",
			"#include <Memory.hpp>",
			"UnMap",
			"GetPagingFlag",
			"Memory::",
			"String.hpp",
			"TrimWhitespace",
			"CircularBuffer",
			"erase",
			"Vector",
			"Comparable",
			"#include <List.hpp>",
			"LinkedObjList",
			"LinkedList",
			"APCI",
			"acip",
			"LinkedList",
			"LinkedLi",
			"LinkedList",
			"SimpleStringMap",
			"LinkedList",
			"HashMap",
			"LinkedList",
			"Library::LinkedList",
			"MapToAllProcesses",
			"SearchByName",
			"FetchAndRemove",
			"destruct_node",
			"FetchAndRemove",
			"allocatedpagelist",
			"Flags",
			"getthread",
			"getret",
			"getthread",
			"CurrentFDIndex",
			"type",
			"CurrentSharedMemoryOffset",
			"fs",
			"sf",
			"allocate",
			"%fs",
			"wtfs",
			"malloc",
			"curid",
			"errno",
			"todo"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"sb->writeptr",
			"sb->buffersize",
			"sb",
			"$(CXX_)",
			"->size(",
			"back",
			"front",
			"pop_front",
			"push_front",
			"push_back",
			"->size(",
			"->get(",
			"Unmap",
			"",
			"Unmap",
			"\\n{\\n",
			")",
			"(",
			"",
			")",
			"(",
			"DIRECTOP",
			")",
			"(",
			"uint32_t",
			"_round",
			"mxa",
			"build",
			"MapFlags",
			"sighandler_t",
			"lx",
			"",
			"LONG_MAX",
			")",
			"(",
			"uint64_t",
			"x86_64-orionx",
			"\\tlong double\\t",
			"\\tfloat\\t\\t",
			"\\tdouble\\t\\t",
			"(long)",
			"\\tlong double\\t",
			"\\tfloat\\t\\t",
			"\\tdouble\\t\\t",
			"\\tfloat\\t\\t",
			"\\tlong double\\t",
			"long double\\t",
			"minimum",
			"math::",
			"License Version 2.0",
			"the Apache License 2.0",
			"",
			"Licensed under the GNU LGPL",
			"Copyright (c) 2011 - 2014, Jonas 'Sortie' Termansen",
			"LONG_MAX",
			"int64_t",
			"uint64_t",
			"__restrict",
			")",
			"(",
			")",
			"(",
			"#include \"../../include/string.h\"",
			"#include \"../../include/stdint.h\"",
			"#include \"../../include/stddef.h\"",
			"long",
			"LONG_MIN",
			"LONG_MAX",
			"unsigned long",
			"long",
			"isspace",
			"",
			"char",
			"strtol",
			"__restrict",
			")",
			"(",
			")",
			"(",
			"",
			"char",
			"float",
			")",
			"(",
			"__restrict__",
			"x86_64-orionx-elf-",
			"the Apache License 2.0",
			"Apache License 2.0",
			"PageSize",
			"HeapAssert",
			"uint64_t",
			"_MagicFooter",
			"_MagicHeader",
			"int64_t",
			"uint64_t",
			"int32_t",
			"uint32_t",
			"uint16_t",
			"uint64_t",
			"const uint64_t",
			"FSObjectTypes::Folder",
			"* FSObject::",
			"* FSObject",
			"",
			"ATADrive",
			"Unmap",
			"PageMapStructure",
			"Process",
			"Thread",
			"uint64_t",
			"nullptr",
			"if(proc && proc->AllocatedPages)",
			"Process",
			"Thread",
			"double",
			") \\1",
			"\\1",
			"int32_t",
			"int16_t",
			"int8_t",
			"uint32_t",
			"uint16_t",
			"uint8_t",
			"",
			"/* \\1 */",
			"// \\1",
			"\\1",
			"\\0"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "applications/DisplayServer/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1138,
						"regions":
						{
						},
						"selection":
						[
							[
								1014,
								1014
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 548.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/Kernel/Kernel.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19322,
						"regions":
						{
						},
						"selection":
						[
							[
								10253,
								10253
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6253.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Libraries/libc/source/support.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 831,
						"regions":
						{
						},
						"selection":
						[
							[
								816,
								816
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 368.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "source/Kernel/Console/UserspaceTTY.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 905,
						"regions":
						{
						},
						"selection":
						[
							[
								327,
								327
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 53.0
	},
	"output.exec":
	{
		"height": 63.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"project": "mx.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"kernelhea",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"virtu",
				"source/Kernel/HardwareAbstraction/MemoryManager/Virtual.cpp"
			],
			[
				"kheap",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"heapk",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"kernel",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"physical",
				"source/Kernel/HardwareAbstraction/MemoryManager/Physical.cpp"
			],
			[
				"kernlheap",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"kernelheap",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"basic_string.h",
				"build/sysroot/usr/include/c++/bits/basic_string.h"
			],
			[
				"multi",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Multitasking.hpp"
			],
			[
				"storage",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Devices/StorageDevice.hpp"
			],
			[
				"khea",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"heap",
				"Libraries/Iris/HeaderFiles/Heap.hpp"
			],
			[
				"pci.cpp",
				"source/Kernel/HardwareAbstraction/Devices/PCI/PCI.cpp"
			],
			[
				"task",
				"source/Kernel/HardwareAbstraction/Multitasking/Task.cpp"
			],
			[
				"loadelf",
				"source/Kernel/HardwareAbstraction/LoadBinary/LoadELF.cpp"
			],
			[
				"fat32",
				"source/Kernel/HardwareAbstraction/Filesystems/FAT/FAT32.cpp"
			],
			[
				"filedesc",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/FileDescriptors.cpp"
			],
			[
				"filesyste",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"ipcstrea",
				"source/Kernel/IPC/StreamingIPC.cpp"
			],
			[
				"socke",
				"source/Kernel/HardwareAbstraction/Network/Socket.cpp"
			],
			[
				"folder",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/Folder.cpp"
			],
			[
				"file.cpp",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/File.cpp"
			],
			[
				"string",
				"Libraries/Iris/String.cpp"
			],
			[
				"socket",
				"source/Kernel/HardwareAbstraction/Network/Socket.cpp"
			],
			[
				"ker",
				"source/Kernel/Kernel.cpp"
			],
			[
				"virtual",
				"source/Kernel/HardwareAbstraction/MemoryManager/Virtual.cpp"
			],
			[
				"udp",
				"source/Kernel/HardwareAbstraction/Network/UDP.cpp"
			],
			[
				"time",
				"source/Kernel/Utility/Time.cpp"
			],
			[
				"filesys",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"filesystem",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"syscall",
				"source/Kernel/HardwareAbstraction/SystemCall/Syscall.s"
			],
			[
				"sys",
				"source/Kernel/HardwareAbstraction/SystemCall/Syscall.s"
			],
			[
				"process",
				"source/Kernel/HardwareAbstraction/SystemCall/Process.cpp"
			],
			[
				"filee",
				"source/Kernel/HeaderFiles/Filesystems.hpp"
			],
			[
				"test.c",
				"src/kernel/test.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Desktop/Stuff/Orion Industries/corevm/corevm.sublime-project"
			],
			[
				"web",
				"~/Dropbox/Public/ProjectsDay/webreport.sublime-project"
			],
			[
				"wb",
				"~/Dropbox/Public/ProjectsDay/webreport.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 225.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}

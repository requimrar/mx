{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Ker",
				"KernelHeap::	namespace"
			],
			[
				"Ali",
				"ALIGNMENT	macro"
			],
			[
				"Allo",
				"AllocateChunk(size_t sz)	void *"
			],
			[
				"heap",
				"HeapEnd	uint64_t"
			],
			[
				"Heap",
				"HeapEnd	uint64_t"
			],
			[
				"Hea",
				"HeapAddress	uint64_t"
			],
			[
				"FREE",
				"FREE_FOOTER_MAGIC	macro"
			],
			[
				"HEAD",
				"FREE_HEADER_MAGIC	macro"
			],
			[
				"FREE_",
				"FREE_HEADER_MAGIC	macro"
			],
			[
				"Magic",
				"FREE_HEADER_MAGIC	macro"
			],
			[
				"LOW",
				"LowStarvedRemaining	uint64_t"
			],
			[
				"Norm",
				"NormStarvedRemaining	uint64_t"
			],
			[
				"LowS",
				"LowStarvationLevel	uint64_t"
			],
			[
				"Low",
				"LowStarveThreshold	macro"
			],
			[
				"LowSt",
				"LowStarvedRemaining	uint64_t"
			],
			[
				"norms",
				"NormStarvedRemaining	uint64_t"
			],
			[
				"Stat",
				"Stat(Kernel::HardwareAbstraction::Filesystems::IOContext *ioctx, Kernel::HardwareAbstraction::Filesystems::VFS::vnode *node, struct stat *st)	void"
			],
			[
				"crt",
				"createtime	uint16_t"
			],
			[
				"c",
				"createdate	uint16_t"
			],
			[
				"st",
				"st_blksize	blksize_t"
			],
			[
				"at",
				"accessdate	uint16_t"
			],
			[
				"cl",
				"cluslen	uint64_t"
			],
			[
				"clus",
				"clusoffset	uint64_t"
			],
			[
				"skip",
				"skippedclus	uint64_t"
			],
			[
				"readfile",
				"Read(fd_t fd, void *buf, off_t off, size_t len)	size_t"
			],
			[
				"KHeap",
				"KernelHeap::	namespace"
			],
			[
				"MMM",
				"MemoryManager	namespace"
			],
			[
				"a",
				"attrib	uint8_t"
			],
			[
				"ATTR_",
				"ATTR_READONLY	macro"
			],
			[
				"pushback",
				"push_back(const rde::basic_string<char, rde::allocator, rde::simple_string_storage<char, rde::allocator> > &v)	void"
			],
			[
				"primar",
				"PrimaryBaseIO	uint16_t"
			],
			[
				"Page",
				"PageDirectoryIndex	uint64_t"
			],
			[
				"Phy",
				"Physical::	namespace"
			],
			[
				"PDPTI",
				"PageDirectoryPointerTableIndex	uint64_t"
			],
			[
				"All",
				"AllocateFromReserved()	uint64_t"
			],
			[
				"Phys",
				"PhysAddr	uint64_t"
			],
			[
				"Kernelheap",
				"KernelHeapMetadata	macro"
			],
			[
				"Virt",
				"VirtAddr	uint64_t"
			],
			[
				"Get",
				"GetKernelCR3()	uint64_t"
			],
			[
				"Kern",
				"Kernel::	namespace"
			],
			[
				"Kernel",
				"Kernel::	namespace"
			],
			[
				"PCIDev",
				"PCIDevices	rde::list<PCIDevice *> *"
			],
			[
				"p",
				"push_back(Kernel::HardwareAbstraction::MemoryManager::Physical::Pair *const &value)	void"
			],
			[
				"pop",
				"pop_front()	void"
			],
			[
				"Chunk",
				"ChunksInHeap	uint64_t"
			],
			[
				"Set",
				"Set(void *Dest, uint8_t Value, uint64_t Length)	void *"
			],
			[
				"push",
				"push_back(const rde::basic_string<char, rde::allocator, rde::simple_string_storage<char, rde::allocator> > &v)	void"
			],
			[
				"Mutex",
				"Mutex	class"
			],
			[
				"round",
				"round(uint64_t s)	uint64_t"
			],
			[
				"KernelHea",
				"KernelHeap::	namespace"
			],
			[
				"nu",
				"nument	int"
			],
			[
				"Alloca",
				"AllocateDMA(uint64_t size)	uint64_t"
			],
			[
				"Print",
				"PrintFormatted(const char *string, ...)	void"
			],
			[
				"OpenFile",
				"OpenFile(const char *path, int flags)	fd_t"
			],
			[
				"FSD",
				"FSDriverFat32	class"
			],
			[
				"par",
				"StorageDevice::Partitions	Library::LinkedList<Partition> *"
			],
			[
				"cluster",
				"Cluster	uint32_t"
			],
			[
				"A",
				"AllocateDMA(uint64_t size)	uint64_t"
			],
			[
				"Memory",
				"MemoryManager::	namespace"
			],
			[
				"d",
				"driver	Kernel::HardwareAbstraction::Filesystems::FSDriver *"
			],
			[
				"V",
				"vnode	struct"
			],
			[
				"Type",
				"VNodeType	enum"
			],
			[
				"VN",
				"vnode	struct"
			],
			[
				"vnode",
				"vnode_data	struct"
			],
			[
				"vnod",
				"vnode_data	struct"
			],
			[
				"Open",
				"Open(Kernel::HardwareAbstraction::Filesystems::IOContext *ioctx, Kernel::HardwareAbstraction::Filesystems::VFS::vnode *node, int flags)	Kernel::HardwareAbstraction::Filesystems::VFS::fileentry *"
			],
			[
				"Mount",
				"Mount(Kernel::HardwareAbstraction::Filesystems::FSDriver *fs, const char *path)	void"
			],
			[
				"if",
				"info	Kernel::HardwareAbstraction::Filesystems::VFS::fsref *"
			],
			[
				"de",
				"dev_t	typedef"
			],
			[
				"blk",
				"blksize_t	typedef"
			],
			[
				"x86_64-",
				"x86_64-orionx-as"
			],
			[
				"Meta",
				"MetadataAddr	uint64_t"
			],
			[
				"GetStra",
				"GetStorageDevice()	Kernel::HardwareAbstraction::Devices::Storage::StorageDevice *"
			],
			[
				"IO",
				"IOTransfer	struct"
			],
			[
				"FT_LOAD_FACE",
				"FT_Open_Face(FT_Library library, const FT_Open_Args *args, FT_Long face_index, FT_Face *aface)	FT_Error"
			],
			[
				"jmp",
				"__jmp_buf_regs	struct"
			],
			[
				"Bitm",
				"BitmapImage	class"
			],
			[
				"Bi",
				"BitmapImage	class"
			],
			[
				"mn",
				"tm_mon	int"
			],
			[
				"tm_day",
				"tm_mday	int"
			],
			[
				"tmy",
				"tm_year	int"
			],
			[
				"O",
				"O_RDWR	macro"
			],
			[
				"S",
				"StandardIO	namespace"
			],
			[
				"Prinnt",
				"PrintFormatted(const char *string, ...)	void"
			],
			[
				"getcur",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"mult",
				"Multitasking::	namespace"
			],
			[
				"curr",
				"CurrentThread	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Multi",
				"Multitasking::	namespace"
			],
			[
				"Ge",
				"GetCurrentProcess()	Kernel::HardwareAbstraction::Multitasking::Process *"
			],
			[
				"MUlti",
				"Multitasking::	namespace"
			],
			[
				"STATE_",
				"STATE_SUSPEND	macro"
			],
			[
				"Sta",
				"State	uint8_t"
			],
			[
				"GeTThrea",
				"GetThreadList(Kernel::HardwareAbstraction::Multitasking::Thread *t)	Library::LinkedList<Thread> *"
			],
			[
				"GetThrea",
				"GetThreadList(Kernel::HardwareAbstraction::Multitasking::Thread *t)	Library::LinkedList<Thread> *"
			],
			[
				"Comm",
				"CommandList	Library::LinkedList<Command> *"
			],
			[
				"LOG",
				"Log(const char *str, ...)	void"
			],
			[
				"GetCUr",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"__s",
				"__sighandle_other()	void"
			],
			[
				"Curr",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"GetCur",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"SendSimple",
				"SendSimpleMessageToProcess(uint64_t TargetPID, Library::SystemCall::MessageTypes Type, uint64_t D1, uint64_t D2, uint64_t D3, void (*Callback)())	void"
			],
			[
				"sign",
				"sighandler_t	typedef"
			],
			[
				"Ins",
				"InstallSignalHandler(uint64_t signum, sighandler_t handler)	void"
			],
			[
				"sig",
				"sig_atomic_t	typedef"
			],
			[
				"Su",
				"SuspProc	macro"
			],
			[
				"GetCu",
				"GetCurrentProcess()	Kernel::HardwareAbstraction::Multitasking::Process *"
			],
			[
				"Suspend",
				"Suspend(const char *p)	void"
			],
			[
				"GEt",
				"GetCurrentProcess()	Kernel::HardwareAbstraction::Multitasking::Process *"
			],
			[
				"Kill",
				"Kill(Kernel::HardwareAbstraction::Multitasking::Process *p)	void"
			],
			[
				"GetC",
				"GetCurrentThread()	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Mutl",
				"Multitasking::	namespace"
			],
			[
				"WakeForMes",
				"WakeForMessage(Kernel::HardwareAbstraction::Multitasking::Thread *Thread)	void"
			],
			[
				"GetTh",
				"GetThread(uint64_t id)	Kernel::HardwareAbstraction::Multitasking::Thread *"
			],
			[
				"Mess",
				"MessageClassTypes	enum"
			],
			[
				"Allocate",
				"AllocateVirtual()	uint64_t"
			],
			[
				"ALL",
				"AllocateTLS()	void *"
			],
			[
				"fil",
				"_FileSize	uint64_t"
			],
			[
				"FSOb",
				"FSObjectTypes	enum"
			],
			[
				"F",
				"Folder	Kernel::HardwareAbstraction::Filesystems::VFS::FSObjectTypes"
			],
			[
				"Oep",
				"OpenFile(const char *path, uint8_t mode)	uint64_t"
			],
			[
				"MMap",
				"_MMap_Anonymous(uint64_t addr, uint64_t size, uint64_t prot, uint64_t flags)	uint64_t"
			],
			[
				"fputs",
				"_fputsn(outfunc_t out, const char *s, int c)	void"
			],
			[
				"Up",
				"uppercase"
			],
			[
				"fputc",
				"fputc(int c, FILE *str)	int"
			],
			[
				"_std",
				"_stdin	FILE"
			],
			[
				"read",
				"read(int fd, void *buf, size_t count)	ssize_t"
			],
			[
				"ispar",
				"IsParsingWidth	bool"
			],
			[
				"bui",
				"build-gcc"
			]
		]
	},
	"buffers":
	[
		{
			"file": "source/Kernel/Kernel.cpp",
			"settings":
			{
				"buffer_size": 17761,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/Kernel/HardwareAbstraction/Filesystems/VFS.cpp",
			"settings":
			{
				"buffer_size": 5803,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/Kernel/HardwareAbstraction/Filesystems/FSDrivers/FAT32.cpp",
			"settings":
			{
				"buffer_size": 21853,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/Kernel/HeaderFiles/Kernel.hpp",
			"settings":
			{
				"buffer_size": 4670,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp",
			"settings":
			{
				"buffer_size": 8332,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/makefile.sublime-build",
	"command_palette":
	{
		"height": 167.0,
		"selected_items":
		[
			[
				"clean",
				"Build: Make clean"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"clena",
				"Build: Make clean"
			],
			[
				"ch",
				"Snippet: Copyright Header"
			],
			[
				"c",
				"Snippet: Copyright Header"
			],
			[
				"hea",
				"Snippet: Copyright Header"
			],
			[
				"header",
				"Snippet: Copyright Header"
			],
			[
				"lean",
				"Build: Make clean"
			],
			[
				"claena",
				"SublimeClang: Clear cache"
			],
			[
				"clea",
				"Build: Make clean"
			],
			[
				"eah",
				"Set Syntax: HTML (ASP)"
			],
			[
				"head",
				"Snippet: Copyright Header"
			],
			[
				"h",
				"Snippet: Copyright Header"
			],
			[
				"haeder",
				"Snippet: Copyright Header"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"cleam",
				"Package Control: Remove Package"
			],
			[
				"clen",
				"Build: Make clean"
			],
			[
				"make ",
				"Build: Make clean"
			],
			[
				"mak",
				"Build: Make clean"
			],
			[
				"make clean",
				"Build: Make clean"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				":make",
				"Set Syntax: Makefile"
			],
			[
				"package remo",
				"Package Control: Remove Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pacage remo",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"m",
				"Markdown Preview: preview in Browser"
			],
			[
				"p",
				"Package Control: Remove Package"
			],
			[
				"mdp",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"package remove",
				"Package Control: Remove Package"
			],
			[
				"package list",
				"Package Control: List Packages"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"term",
				"Open in terminal"
			],
			[
				"sub",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"sni",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"ani",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"sn",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"snipp",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"snippet",
				"Snippet: Inserts standard licensing info and filename"
			],
			[
				"Snipp",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Package Control: Remove Package"
			],
			[
				"p r",
				"Package Control: Remove Package"
			],
			[
				"package i",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Preferences: Browse Packages"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"package control instal",
				"Package Control: Install Package"
			],
			[
				"package instal",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"exit()",
			"help();",
			"help()",
			"help"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/BitmapLibrary",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Console",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/NIC",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/PCI",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/StorageDevices",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/StorageDevices/ATA",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/FAT",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/FSDrivers",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Interrupts",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/LoadBinary",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/TCP",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/VideoOutput",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/VideoOutput/LinearFramebuffer",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Devices",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/IPC",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility"
	],
	"file_history":
	[
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/Kernel.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Interrupts/Exceptions.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/IOScheduler.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/string/memmove.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/Scheduler.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/SchedulingHelpers.cpp",
		"/Users/zhiayang/Library/Application Support/Sublime Text 3/Packages/User/Dart.sublime-settings",
		"/Users/zhiayang/Library/Application Support/Sublime Text 3/Packages/Dart/Support/Dart.sublime-settings",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/Mutex.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/sys/stat.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdlib/todo_stdlib.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdlib/time.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/time.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/sys/types.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/allocator.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/simple_string_storage.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/vector.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager/Physical.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/MemoryManager/Physical.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libsyscall/source/Physical.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/c++/tr1/poly_hermite.tcc",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/freetype-2.5.3/docs/PROBLEMS",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/sstream.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/alignment.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/c++/cstddef",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/radix_sorter.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/hash_map.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/rdestl_common.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/slist.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/rb_tree.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/list.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/intrusive_slist.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/intrusive_list.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/fixed_substring.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/cow_string_storage.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/fixed_list.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/kernel.mxa",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/StandardIO.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/Utility.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/Utility.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/MemoryManager/KernelHeap.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Multitasking.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/StorageDevices/ATA/ATA.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/MemoryManager/Virtual.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/PCI/PCI.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Kernel.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Devices/PCI.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/list.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/VFS.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/FSDrivers/FAT32.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/assert.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/assert.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl/utility.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/Time.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility/Misc.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility/Log.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/ConfigFile.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility/Time.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/c++/cstdlib",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/toolchain/x86_64-orionx/include/c++/4.9.1/cstdlib",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/c++/bits/basic_string.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/toolchain/x86_64-orionx/include/c++/4.9.1/bits/basic_string.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/c++/bits/basic_file.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/c++/ext/bitmap_allocator.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/bootstrap",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/source/stdio/_heap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/LibUserspace/Heap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/sysroot/usr/include/c++/ext/malloc_allocator.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/kernel64.elf",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/orion.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/include/stdio.h",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/link.ld",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/libc/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/IPC/DefaultSignalHandlers.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/mx.sublime-project",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/Partition.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/String.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/LibUserspace/FileIO.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/StringStream.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/StringStream.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/SimpleStringMap.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Multitasking/Task.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/LoadBinary/GenericExecutable.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/Symbolicate.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/String.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/Iris/HeaderFiles/StandardIO.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/FAT/FAT32.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/Syscall.s",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility/Symbolicate.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility/ConfigFile.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/Utility/Bootscreen.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/IPC/StreamingIPC.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/ScreenIO.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/UserspaceInterface.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/Process.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/MemAlloc.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/KeyboardIO.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/FileIO.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/SystemCall/InterruptPlugs.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/UDP.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/Socket.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/Network.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/IPv4.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/ICMP.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/Ethernet.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/DNS.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/DHCP.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/ARP.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/TCP/TCPConnection.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Network/TCP/TCP.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/LoadBinary/LoadRawBinary.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/FSDriver.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/HFS/HFS+.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/NIC/RTL8139.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Network.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/IPC.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HeaderFiles/HardwareAbstraction/Devices.hpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Devices/Device.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source/Kernel/HardwareAbstraction/Filesystems/VFS/File.cpp",
		"/Users/zhiayang/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/HelloSpamTest/makefile",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/HelloSpamTest/HelloSpamTest.cpp",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/build/serialout.log",
		"/Users/zhiayang/Desktop/Stuff/OSDev/mx/applications/CarbonShell/CarbonShell.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/Libraries/rdestl",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/mx/source",
			"",
			"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/abs.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/atoi.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/div.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/qsort.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/qsort_r.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/rand.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/strtof.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/stdlib/strtol.cpp",
			"/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memccpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memcmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memcpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memmove.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memrchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/memset.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcat.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strcspn.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strlen.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncat.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncmp.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strncpy.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strpbrk.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strrchr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strspn.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strstr.cpp,/Users/zhiayang/Desktop/Stuff/OSDev/Orion-X4/Libraries/libc/source/string/strtok.cpp",
			"",
			"*.cpp,*.hpp,*.s",
			"",
			"Internal::GetLFBAddr()",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"createnode",
			"Log(3, ",
			"DIRECTREAD",
			" )",
			" ( ",
			" int ",
			" int",
			"int",
			"size",
			"int64",
			"int32",
			"int16",
			"int8",
			"uint64",
			"uint32",
			"uint16",
			"uint8",
			"#include \"rdestl.h\"",
			"size_type",
			"struct",
			"new",
			"duplicate",
			"UHALT",
			"HALT",
			"UHALT",
			"Print()",
			"PCIDevices",
			"__assert",
			"AllocateVia",
			"->size",
			"assert",
			"#([:blank:]*)define([:blank:]*)assert",
			"#(:blank:*)define(:blank:*)assert",
			"#(:blank:+)define(:blank:+)assert",
			"#( +)define( +)assert",
			"#define assert",
			"sizeof\\((.*)\\);",
			"sizeof\\((.*)\\)",
			"sizeof\\([.*]\\)",
			"sizeof\\([.+]\\)",
			"sizeof\\([*]+\\)",
			"sizeof\\([.]+\\)",
			"sizeof\\(([.]+)\\)",
			"std::",
			"#include",
			"std::",
			"std",
			"deque",
			"std::string",
			"mbtowc",
			"failure",
			"round",
			"malloc",
			"operator new",
			"delete",
			"->insert",
			"insert",
			"allocate",
			"getclusterchain",
			"clusterchain",
			"delete",
			"__cxa",
			"traverse",
			"DirectoryEntry",
			"operator new",
			"fsdriver",
			"Loading",
			"Orion-X4",
			"backup",
			"oex",
			"output",
			"cross64",
			"cr3",
			"SwitchPML4T",
			"MAC",
			"tx",
			"initialise",
			"virtual",
			"initialise",
			"expanding",
			"goto repeat",
			"GetFSObjects",
			"ScheduleRead",
			"Read(",
			"Read",
			"ATA->Read",
			"block",
			"sigsetjmp",
			"setsigjmp",
			"setjmp",
			"SIG_SETMASK",
			"FT_EXPORT_DEF",
			"FT_Init_Freetype",
			"extern \"C\"",
			"FT_Init_FreeType",
			"EDOM",
			"TODO",
			"lseek",
			"exit",
			"__tm",
			"putchar",
			"#ifndef __cplusplus",
			"C0DE",
			"PendingSleepList",
			"InstructionPointer",
			"0x25",
			"25",
			"250",
			"SendSimpleMessage",
			"WakeForMessage",
			"length",
			"fetchandremove",
			"%x, %d",
			"%x, %x",
			"invalid target thread",
			"wakeformess",
			"0x05",
			"x07",
			"0x3",
			"0x7",
			"sighandle_t",
			"wakeformessage",
			"extern \"C++\"",
			"output",
			"CCFLAGS",
			"0x38",
			"Syscall_MMapFile",
			"ENOTSUP"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"DIRECTOP",
			")",
			"(",
			"uint32_t",
			"_round",
			"mxa",
			"build",
			"MapFlags",
			"sighandler_t",
			"lx",
			"",
			"LONG_MAX",
			")",
			"(",
			"uint64_t",
			"x86_64-orionx",
			"\\tlong double\\t",
			"\\tfloat\\t\\t",
			"\\tdouble\\t\\t",
			"(long)",
			"\\tlong double\\t",
			"\\tfloat\\t\\t",
			"\\tdouble\\t\\t",
			"\\tfloat\\t\\t",
			"\\tlong double\\t",
			"long double\\t",
			"minimum",
			"math::",
			"License Version 2.0",
			"the Apache License 2.0",
			"",
			"Licensed under the GNU LGPL",
			"Copyright (c) 2011 - 2014, Jonas 'Sortie' Termansen",
			"LONG_MAX",
			"int64_t",
			"uint64_t",
			"__restrict",
			")",
			"(",
			")",
			"(",
			"#include \"../../include/string.h\"",
			"#include \"../../include/stdint.h\"",
			"#include \"../../include/stddef.h\"",
			"long",
			"LONG_MIN",
			"LONG_MAX",
			"unsigned long",
			"long",
			"isspace",
			"",
			"char",
			"strtol",
			"__restrict",
			")",
			"(",
			")",
			"(",
			"",
			"char",
			"float",
			")",
			"(",
			"__restrict__",
			"x86_64-orionx-elf-",
			"the Apache License 2.0",
			"Apache License 2.0",
			"PageSize",
			"HeapAssert",
			"uint64_t",
			"_MagicFooter",
			"_MagicHeader",
			"int64_t",
			"uint64_t",
			"int32_t",
			"uint32_t",
			"uint16_t",
			"uint64_t",
			"const uint64_t",
			"FSObjectTypes::Folder",
			"* FSObject::",
			"* FSObject",
			"",
			"ATADrive",
			"Unmap",
			"PageMapStructure",
			"Process",
			"Thread",
			"uint64_t",
			"nullptr",
			"if(proc && proc->AllocatedPages)",
			"Process",
			"Thread",
			"double",
			") \\1",
			"\\1",
			"int32_t",
			"int16_t",
			"int8_t",
			"uint32_t",
			"uint16_t",
			"uint8_t",
			"",
			"/* \\1 */",
			"// \\1",
			"\\1",
			"\\0",
			"\\1",
			"VT_CursorX * 8 + 10",
			"VT_CursorX * 8 + 3",
			"do(",
			"if(",
			")\\n{",
			"if(",
			"while(",
			"for(",
			")\\n{",
			"long double",
			"fldl %\\1",
			"fldl %\\0",
			")\\n{",
			"false",
			"LinkedList",
			"maxTemp = 10000",
			"const uint32_t",
			"const uint32_t ",
			"foreseeable",
			"(c) 2013 - The Forseeable Future"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source/Kernel/Kernel.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17761,
						"regions":
						{
						},
						"selection":
						[
							[
								9474,
								9474
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5400.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/Kernel/HardwareAbstraction/Filesystems/VFS.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5803,
						"regions":
						{
						},
						"selection":
						[
							[
								1762,
								1762
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1411.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "source/Kernel/HardwareAbstraction/Filesystems/FSDrivers/FAT32.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21853,
						"regions":
						{
						},
						"selection":
						[
							[
								11486,
								11486
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8623.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "source/Kernel/HeaderFiles/Kernel.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4670,
						"regions":
						{
						},
						"selection":
						[
							[
								1087,
								1087
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 139.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8332,
						"regions":
						{
						},
						"selection":
						[
							[
								3801,
								3801
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 47.0
	},
	"output.exec":
	{
		"height": 63.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"project": "mx.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"kheap",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"kernel",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"physical",
				"source/Kernel/HardwareAbstraction/MemoryManager/Physical.cpp"
			],
			[
				"kernlheap",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"kernelheap",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"basic_string.h",
				"build/sysroot/usr/include/c++/bits/basic_string.h"
			],
			[
				"multi",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Multitasking.hpp"
			],
			[
				"storage",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Devices/StorageDevice.hpp"
			],
			[
				"khea",
				"source/Kernel/HardwareAbstraction/MemoryManager/KernelHeap.cpp"
			],
			[
				"heap",
				"Libraries/Iris/HeaderFiles/Heap.hpp"
			],
			[
				"pci.cpp",
				"source/Kernel/HardwareAbstraction/Devices/PCI/PCI.cpp"
			],
			[
				"task",
				"source/Kernel/HardwareAbstraction/Multitasking/Task.cpp"
			],
			[
				"loadelf",
				"source/Kernel/HardwareAbstraction/LoadBinary/LoadELF.cpp"
			],
			[
				"fat32",
				"source/Kernel/HardwareAbstraction/Filesystems/FAT/FAT32.cpp"
			],
			[
				"filedesc",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/FileDescriptors.cpp"
			],
			[
				"filesyste",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"ipcstrea",
				"source/Kernel/IPC/StreamingIPC.cpp"
			],
			[
				"socke",
				"source/Kernel/HardwareAbstraction/Network/Socket.cpp"
			],
			[
				"folder",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/Folder.cpp"
			],
			[
				"file.cpp",
				"source/Kernel/HardwareAbstraction/Filesystems/VFS/File.cpp"
			],
			[
				"string",
				"Libraries/Iris/String.cpp"
			],
			[
				"socket",
				"source/Kernel/HardwareAbstraction/Network/Socket.cpp"
			],
			[
				"ker",
				"source/Kernel/Kernel.cpp"
			],
			[
				"virtual",
				"source/Kernel/HardwareAbstraction/MemoryManager/Virtual.cpp"
			],
			[
				"udp",
				"source/Kernel/HardwareAbstraction/Network/UDP.cpp"
			],
			[
				"time",
				"source/Kernel/Utility/Time.cpp"
			],
			[
				"filesys",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"filesystem",
				"source/Kernel/HeaderFiles/HardwareAbstraction/Filesystems.hpp"
			],
			[
				"syscall",
				"source/Kernel/HardwareAbstraction/SystemCall/Syscall.s"
			],
			[
				"sys",
				"source/Kernel/HardwareAbstraction/SystemCall/Syscall.s"
			],
			[
				"process",
				"source/Kernel/HardwareAbstraction/SystemCall/Process.cpp"
			],
			[
				"filee",
				"source/Kernel/HeaderFiles/Filesystems.hpp"
			],
			[
				"test.c",
				"src/kernel/test.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Desktop/Stuff/OSDev/Orion-X4/testbed/testbed.sublime-project"
			],
			[
				"web",
				"~/Dropbox/Public/ProjectsDay/webreport.sublime-project"
			],
			[
				"wb",
				"~/Dropbox/Public/ProjectsDay/webreport.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 225.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
